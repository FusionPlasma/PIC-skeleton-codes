Skeleton 3D Darwin Python MPI Particle-in-Cell (PIC) code
by Viktor K. Decyk, Adam Tableman, and Qiyang Hu
copyright 2015, regents of the university of california

This file contains a 3D Darwin Python MPI PIC code.  It is based on the
3D Darwin MPI PIC code contained in the directory pdpic3.  The primary
purpose is to illustrate how to replace a Fortran main code with a
Python script, in order allow the program to be run interactively.

Python version 2.7 is recommended, and is available from the web site:
www.python.org.  Numpy (http://www.numpy.org) and SciPy
(http://www.scipy.org) also need to be installed.

The file fpdpic3.py is a line by line translation of pdpic3.f90 in the
directory pdpic3.  The procedure libraries pdpush3.f and pplib3.f90 are
identical to those in pdpic3.  Interface function pdpush3pp_hpy.f90 is
provided to allow the f2py program to automatically wrap the procedures
to make them accessible to Python.  The interface file pdpush3pp_hpy.f90
is a merger of the files pdpush3_h.f90 and pplib3_h.f90.  It was
necessary to merge these two files because the procedures in pplib3.f90
are used both by the Python script as well as internally in pdpush3.f.
These files are further modified in in two ways.  The first modification
was the removal of the module/end module statements, which fp2y cannot
currently handle properly.  The second was the replacement of 
explicit-shape array declarations with assumed-size array declarations
so that f2py would not remove the arguments in the array declarations
from the argument list.

No warranty for proper operation of this software is given or implied.
Software or information may be copied, distributed, and used at own
risk; it may not be distributed without this notice included verbatim
with each file.  If use of these codes results in a publication, an
acknowledgement is requested.

The major program files contained here include:
fpdpic3.py         Python main script for Fortran procedure library
pdpush3.f          Fortran77 procedure library
pdpush3pp_hpy.f90  Fortran procedure and MPI interface (header) library
dtimer.c           C timer function, used by both C and Fortran
dtimer_hpy.f90     C timer interface (header) library
pplib3.f90         Fortran90 MPI communications library

Files with the suffix .f90 adhere to the Fortran 90 standard, files with
the suffix .f adhere to the Fortran77 standard, files with the suffix .c
and .h adhere to the C99 standard.

The makefile is setup to use gcc and gfortran with Linux.  Versions for
other compilers are also in the Makefile but are commented out.

One dynamic library can be created, fpdpush3.so for Fortran.  To create
it, execute:

make

To execute, type the name of the executable:

mpirun -np nproc python fpdpic3.py

where nproc is the number of processors to be used.

There is one restriction on the number of processors which can be used:
this simple skeleton code does not support the case where MPI nodes have
zero grid points.  This special case can happen for certain combinations
of the grid size in y or z (set by the parameters indy or indz,
respectively) and the number of processors in y and z.  If this happens
the code will exit with an error message.  This special case will never
occur if the grid size in y is an exact multiple of the number of
processors in y, and the grid size in z is an exact multiple of the
number of processors in z.

The file output contains the results produced for the default parameters.
